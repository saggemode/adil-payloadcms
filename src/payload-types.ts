/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    pages: Page;
    posts: Post;
    media: Media;
    categories: Category;
    users: User;
    brands: Brand;
    sizes: Size;
    colors: Color;
    tags: Tag;
    orders: Order;
    products: Product;
    reviews: Review;
    addresses: Address;
    coupons: Coupon;
    'flash-sales': FlashSale;
    'payment-methods': PaymentMethod;
    'social-media': SocialMedia;
    wishlists: Wishlist;
    'loyalty-points': LoyaltyPoint;
    rewards: Reward;
    referrals: Referral;
    'referral-attempts': ReferralAttempt;
    'referral-analytics': ReferralAnalytic;
    'referral-rewards': ReferralReward;
    'invoice-templates': InvoiceTemplate;
    returns: Return;
    redirects: Redirect;
    forms: Form;
    'form-submissions': FormSubmission;
    search: Search;
    'payload-jobs': PayloadJob;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    pages: PagesSelect<false> | PagesSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    brands: BrandsSelect<false> | BrandsSelect<true>;
    sizes: SizesSelect<false> | SizesSelect<true>;
    colors: ColorsSelect<false> | ColorsSelect<true>;
    tags: TagsSelect<false> | TagsSelect<true>;
    orders: OrdersSelect<false> | OrdersSelect<true>;
    products: ProductsSelect<false> | ProductsSelect<true>;
    reviews: ReviewsSelect<false> | ReviewsSelect<true>;
    addresses: AddressesSelect<false> | AddressesSelect<true>;
    coupons: CouponsSelect<false> | CouponsSelect<true>;
    'flash-sales': FlashSalesSelect<false> | FlashSalesSelect<true>;
    'payment-methods': PaymentMethodsSelect<false> | PaymentMethodsSelect<true>;
    'social-media': SocialMediaSelect<false> | SocialMediaSelect<true>;
    wishlists: WishlistsSelect<false> | WishlistsSelect<true>;
    'loyalty-points': LoyaltyPointsSelect<false> | LoyaltyPointsSelect<true>;
    rewards: RewardsSelect<false> | RewardsSelect<true>;
    referrals: ReferralsSelect<false> | ReferralsSelect<true>;
    'referral-attempts': ReferralAttemptsSelect<false> | ReferralAttemptsSelect<true>;
    'referral-analytics': ReferralAnalyticsSelect<false> | ReferralAnalyticsSelect<true>;
    'referral-rewards': ReferralRewardsSelect<false> | ReferralRewardsSelect<true>;
    'invoice-templates': InvoiceTemplatesSelect<false> | InvoiceTemplatesSelect<true>;
    returns: ReturnsSelect<false> | ReturnsSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    search: SearchSelect<false> | SearchSelect<true>;
    'payload-jobs': PayloadJobsSelect<false> | PayloadJobsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    header: Header;
    footer: Footer;
  };
  globalsSelect: {
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: {
      schedulePublish: TaskSchedulePublish;
      inline: {
        input: unknown;
        output: unknown;
      };
    };
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  hero: {
    type: 'none' | 'highImpact' | 'mediumImpact' | 'lowImpact' | 'customHero';
    richText?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    links?:
      | {
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: number | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: number | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline') | null;
          };
          id?: string | null;
        }[]
      | null;
    media?: (number | null) | Media;
  };
  layout: (CallToActionBlock | ContentBlock | MediaBlock | ArchiveBlock | FormBlock)[];
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: number;
  title: string;
  heroImage?: (number | null) | Media;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  relatedPosts?: (number | Post)[] | null;
  categories?: (number | Category)[] | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  authors?: (number | User)[] | null;
  populatedAuthors?:
    | {
        id?: string | null;
        name?: string | null;
      }[]
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt?: string | null;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    square?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    small?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    xlarge?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    og?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  title: string;
  media?: (number | null) | Media;
  slug?: string | null;
  slugLock?: boolean | null;
  parent?: (number | null) | Category;
  breadcrumbs?:
    | {
        doc?: (number | null) | Category;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Users of the platform
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  addresses?: (number | Address)[] | null;
  name?: string | null;
  /**
   * Points earned through referrals and other activities
   */
  loyalty_points?: number | null;
  /**
   * Unique code used for referrals
   */
  referralCode?: string | null;
  /**
   * User who referred this user
   */
  referredBy?: (number | null) | User;
  /**
   * Total number of successful referrals
   */
  totalReferrals?: number | null;
  /**
   * Total rewards earned from referrals
   */
  referralRewards?: number | null;
  roles?: ('admin' | 'customer' | 'moderator')[] | null;
  stripeCustomerID?: string | null;
  skipSync?: boolean | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "addresses".
 */
export interface Address {
  id: number;
  user: number | User;
  fullName: string;
  street: string;
  city: string;
  postalCode: string;
  country: string;
  province: string;
  phone: string;
  isDefault?: boolean | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock".
 */
export interface CallToActionBlock {
  richText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  links?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'cta';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock".
 */
export interface ContentBlock {
  columns?:
    | {
        size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
        richText?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        enableLink?: boolean | null;
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'content';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
  media: number | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'mediaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock".
 */
export interface ArchiveBlock {
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  populateBy?: ('collection' | 'selection') | null;
  relationTo?: 'posts' | null;
  categories?: (number | Category)[] | null;
  limit?: number | null;
  selectedDocs?:
    | {
        relationTo: 'posts';
        value: number | Post;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'archive';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock".
 */
export interface FormBlock {
  form: number | Form;
  enableIntro?: boolean | null;
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'formBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: number;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            placeholder?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  /**
   * Choose whether to display an on-page message or redirect to a different page after they submit the form.
   */
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    url: string;
  };
  /**
   * Send custom emails when the form submits. Use comma separated lists to send the same email to multiple recipients. To reference a value from this form, wrap that field's name with double curly brackets, i.e. {{firstName}}. You can use a wildcard {{*}} to output all data and {{*:table}} to format it as an HTML table in the email.
   */
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        /**
         * Enter the message that should be sent in this email.
         */
        message?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "brands".
 */
export interface Brand {
  id: number;
  title: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sizes".
 */
export interface Size {
  id: number;
  title: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "colors".
 */
export interface Color {
  id: number;
  title: string;
  code: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tags".
 */
export interface Tag {
  id: number;
  title: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders".
 */
export interface Order {
  id: number;
  user: number | User;
  coupon?: (number | null) | Coupon;
  items?:
    | {
        product: number | Product;
        clientId: string;
        name: string;
        slug: string;
        image: string;
        category: string;
        price: number;
        countInStock: number;
        quantity: number;
        size?: string | null;
        color?: string | null;
        id?: string | null;
      }[]
    | null;
  address?: (number | null) | Address;
  shippingAddress: {
    fullName: string;
    street: string;
    city: string;
    postalCode: string;
    country: string;
    province: string;
    phone: string;
  };
  expectedDeliveryDate: string;
  expectedDeliveryDate_tz?: string | null;
  paymentMethod: string;
  paymentResult?: {
    id?: string | null;
    status?: string | null;
    email_address?: string | null;
    pricePaid?: string | null;
  };
  itemsPrice: number;
  shippingPrice: number;
  taxPrice: number;
  totalPrice: number;
  isPaid?: boolean | null;
  paidAt?: string | null;
  paidAt_tz?: SupportedTimezones;
  isDelivered?: boolean | null;
  deliveredAt?: string | null;
  deliveredAt_tz?: SupportedTimezones;
  createdAt: string;
  createdAt_tz?: SupportedTimezones;
  invoiceDelivery?: {
    preferences?: {
      sendEmail?: boolean | null;
      sendWhatsApp?: boolean | null;
      sendSMS?: boolean | null;
    };
    status?: {
      emailSent?: boolean | null;
      whatsappSent?: boolean | null;
      smsSent?: boolean | null;
      lastSentAt?: string | null;
    };
  };
  updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "coupons".
 */
export interface Coupon {
  id: number;
  code: string;
  discountPercent: number;
  startDate: string;
  startDate_tz: SupportedTimezones;
  endDate: string;
  endDate_tz: SupportedTimezones;
  usageLimit: number;
  usageCount?: number | null;
  orders?: (number | Order)[] | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: number;
  title: string;
  /**
   * Product barcode (ISBN, UPC, EAN, etc.)
   */
  barcode?: string | null;
  price: number;
  listPrice: number;
  flashSaleId?: string | null;
  flashSaleEndDate?: string | null;
  flashSaleDiscount?: number | null;
  isFeatured?: boolean | null;
  isPublished?: boolean | null;
  countInStock: number;
  numSales: number;
  avgRating: number;
  numReviews: number;
  ratingDistribution?:
    | {
        rating: number;
        count: number;
        id?: string | null;
      }[]
    | null;
  images?:
    | {
        image?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  relatedProducts?: (number | Product)[] | null;
  tags?: (number | null) | Tag;
  categories?: (number | null) | Category;
  brands?: (number | null) | Brand;
  colors?: (number | Color)[] | null;
  sizes?: (number | Size)[] | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  publishedAt_tz?: SupportedTimezones;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reviews".
 */
export interface Review {
  id: number;
  user: number | User;
  isVerifiedPurchase?: boolean | null;
  product: number | Product;
  rating: number;
  title: string;
  comment: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "flash-sales".
 */
export interface FlashSale {
  id: number;
  name: string;
  description?: string | null;
  status: 'draft' | 'scheduled' | 'active' | 'ended';
  startDate: string;
  endDate: string;
  discountType: 'percentage' | 'fixed';
  discountAmount: number;
  products: (number | Product)[];
  rules?:
    | {
        type: 'minPurchase' | 'maxDiscount' | 'maxQuantity';
        value: number;
        id?: string | null;
      }[]
    | null;
  stats?: {
    totalOrders?: number | null;
    totalRevenue?: number | null;
    totalDiscount?: number | null;
    averageOrderValue?: number | null;
  };
  totalQuantity: number;
  soldQuantity?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payment-methods".
 */
export interface PaymentMethod {
  id: number;
  name: string;
  description: string;
  icon: 'paypal' | 'credit-card' | 'wallet';
  isActive?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "social-media".
 */
export interface SocialMedia {
  id: number;
  platform: 'facebook' | 'twitter' | 'instagram' | 'pinterest' | 'linkedin' | 'whatsapp';
  isEnabled?: boolean | null;
  appId?: string | null;
  appSecret?: string | null;
  apiKey?: string | null;
  apiSecret?: string | null;
  accessToken?: string | null;
  pinterestAccessToken?: string | null;
  clientId?: string | null;
  clientSecret?: string | null;
  sharingPreferences?: {
    shareProducts?: boolean | null;
    shareBlogPosts?: boolean | null;
    shareFlashSales?: boolean | null;
  };
  defaultShareMessage?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "wishlists".
 */
export interface Wishlist {
  id: number;
  user: number | User;
  items?:
    | {
        product: number | Product;
        addedAt: string;
        id?: string | null;
      }[]
    | null;
  createdAt: string;
  updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "loyalty-points".
 */
export interface LoyaltyPoint {
  id: number;
  customerId: string;
  points: number;
  tier: 'bronze' | 'silver' | 'gold' | 'platinum';
  pointsHistory?:
    | {
        points: number;
        type: 'earned' | 'redeemed' | 'expired' | 'adjusted';
        description: string;
        createdAt: string;
        id?: string | null;
      }[]
    | null;
  rewards?:
    | {
        rewardId: string;
        name: string;
        pointsCost: number;
        status: 'available' | 'redeemed' | 'expired';
        redeemedAt?: string | null;
        id?: string | null;
      }[]
    | null;
  tierHistory?:
    | {
        tier: 'bronze' | 'silver' | 'gold' | 'platinum';
        changedAt: string;
        reason: string;
        id?: string | null;
      }[]
    | null;
  createdAt: string;
  updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "rewards".
 */
export interface Reward {
  id: number;
  name: string;
  description: string;
  pointsCost: number;
  type: 'discount' | 'free_shipping' | 'free_product' | 'special_access';
  discountAmount?: number | null;
  discountType?: ('percentage' | 'fixed') | null;
  freeProduct?: (number | null) | Product;
  specialAccessDetails?: string | null;
  validFrom: string;
  validUntil: string;
  isActive?: boolean | null;
  /**
   * The product whose stock will be used for this reward
   */
  linkedProduct: number | Product;
  /**
   * This field is automatically updated based on the linked product's stock
   */
  stock?: number | null;
  tierRestrictions?: ('bronze' | 'silver' | 'gold' | 'platinum')[] | null;
  image: number | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "referrals".
 */
export interface Referral {
  id: number;
  /**
   * The user who made the referral
   */
  referrer: number | User;
  /**
   * The user who was referred
   */
  referredUser: number | User;
  /**
   * The referral code used (from the referrer)
   */
  referralCode: string;
  status: 'pending' | 'completed' | 'expired';
  /**
   * The reward tier assigned to this referral
   */
  rewardTier: number | ReferralReward;
  /**
   * Amount spent by the referred user
   */
  purchaseAmount?: number | null;
  /**
   * Date when the referral code expires
   */
  expiryDate: string;
  /**
   * Date when the referral was completed
   */
  completedAt?: string | null;
  /**
   * Additional notes about the referral
   */
  notes?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "referral-rewards".
 */
export interface ReferralReward {
  id: number;
  /**
   * Name of the reward tier (e.g., "Standard Referral", "Premium Referral")
   */
  name: string;
  /**
   * Description of this reward tier
   */
  description?: string | null;
  /**
   * Fixed amount awarded for successful referral
   */
  rewardAmount: number;
  /**
   * Type of reward (fixed amount or percentage)
   */
  rewardType: 'fixed' | 'percentage';
  /**
   * Percentage reward (only used if rewardType is percentage)
   */
  rewardPercentage?: number | null;
  /**
   * Whether this reward tier is currently active
   */
  isActive?: boolean | null;
  /**
   * Start date for this reward tier
   */
  startDate?: string | null;
  /**
   * End date for this reward tier
   */
  endDate?: string | null;
  /**
   * Minimum purchase amount required to qualify for this reward
   */
  minimumPurchaseAmount?: number | null;
  /**
   * Additional notes about this reward tier
   */
  notes?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "referral-attempts".
 */
export interface ReferralAttempt {
  id: number;
  /**
   * The referral code that was attempted to be used
   */
  referralCode: string;
  /**
   * The user who attempted to use the referral code
   */
  attemptedBy: number | User;
  status: 'pending' | 'success' | 'failed';
  /**
   * Reason for failure if the attempt was unsuccessful
   */
  failureReason?: ('already_referred' | 'invalid_code' | 'expired_code' | 'other') | null;
  /**
   * Additional details about the failure
   */
  failureDetails?: string | null;
  /**
   * IP address of the user who made the attempt
   */
  ipAddress?: string | null;
  /**
   * Browser/device information of the user
   */
  userAgent?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "referral-analytics".
 */
export interface ReferralAnalytic {
  id: number;
  /**
   * The referral code being analyzed
   */
  referralCode: string;
  /**
   * The user who owns this referral code
   */
  referrer: number | User;
  /**
   * Total number of times this code was attempted to be used
   */
  totalAttempts: number;
  /**
   * Number of successful referrals using this code
   */
  successfulAttempts: number;
  /**
   * Number of failed attempts using this code
   */
  failedAttempts: number;
  /**
   * Percentage of successful attempts (0-100)
   */
  successRate: number;
  /**
   * Total loyalty points awarded through this code
   */
  totalPointsAwarded: number;
  /**
   * Average purchase amount from referred users
   */
  averagePurchaseAmount: number;
  /**
   * Total purchase amount from all referred users
   */
  totalPurchaseAmount: number;
  failureBreakdown?: {
    alreadyReferred?: number | null;
    invalidCode?: number | null;
    expiredCode?: number | null;
    other?: number | null;
  };
  geographicData?: {
    /**
     * Map of country codes to attempt counts
     */
    countries?:
      | {
          [k: string]: unknown;
        }
      | unknown[]
      | string
      | number
      | boolean
      | null;
    /**
     * Map of city names to attempt counts
     */
    cities?:
      | {
          [k: string]: unknown;
        }
      | unknown[]
      | string
      | number
      | boolean
      | null;
  };
  deviceData?: {
    /**
     * Map of browser names to attempt counts
     */
    browsers?:
      | {
          [k: string]: unknown;
        }
      | unknown[]
      | string
      | number
      | boolean
      | null;
    /**
     * Map of OS names to attempt counts
     */
    operatingSystems?:
      | {
          [k: string]: unknown;
        }
      | unknown[]
      | string
      | number
      | boolean
      | null;
    /**
     * Map of device types to attempt counts
     */
    devices?:
      | {
          [k: string]: unknown;
        }
      | unknown[]
      | string
      | number
      | boolean
      | null;
  };
  timeData?: {
    /**
     * Map of hours (0-23) to attempt counts
     */
    hourlyDistribution?:
      | {
          [k: string]: unknown;
        }
      | unknown[]
      | string
      | number
      | boolean
      | null;
    /**
     * Map of days (0-6) to attempt counts
     */
    dailyDistribution?:
      | {
          [k: string]: unknown;
        }
      | unknown[]
      | string
      | number
      | boolean
      | null;
  };
  /**
   * When this analytics record was last updated
   */
  lastUpdated: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "invoice-templates".
 */
export interface InvoiceTemplate {
  id: number;
  name: string;
  description?: string | null;
  /**
   * Use {{variable}} syntax for dynamic content. Available variables: orderId, customerName, items, totalPrice, shippingAddress, etc.
   */
  template: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Set this as the default template for new orders
   */
  isDefault?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "returns".
 */
export interface Return {
  id: number;
  /**
   * Auto-generated return ID
   */
  returnId?: string | null;
  /**
   * The order associated with this return
   */
  order: number | Order;
  user: number | User;
  status: 'pending' | 'approved' | 'rejected' | 'received' | 'completed' | 'cancelled';
  /**
   * Date the return was requested
   */
  requestDate?: string | null;
  /**
   * Items being returned
   */
  items: {
    product: number | Product;
    quantity: number;
    reason: 'damaged' | 'wrong_item' | 'not_as_described' | 'changed_mind' | 'sizing_issue' | 'other';
    /**
     * Additional details about the return reason
     */
    reasonDetails?: string | null;
    condition?: ('new' | 'used' | 'damaged') | null;
    id?: string | null;
  }[];
  returnMethod?: ('store_dropoff' | 'mail' | 'pickup') | null;
  refundType?: ('full_refund' | 'partial_refund' | 'store_credit' | 'replacement' | 'no_refund') | null;
  /**
   * Amount to be refunded (if applicable)
   */
  refundAmount?: number | null;
  /**
   * Whether the refund has been processed
   */
  isRefundProcessed?: boolean | null;
  /**
   * Date the refund was processed
   */
  refundProcessedDate?: string | null;
  /**
   * Internal notes for administrators
   */
  adminNotes?: string | null;
  customerMessages?:
    | {
        message: string;
        sentBy: 'customer' | 'admin';
        sentAt?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Tracking number or link to return shipping label
   */
  returnShippingLabel?: string | null;
  /**
   * The carrier handling the return shipment
   */
  returnShippingCarrier?: string | null;
  /**
   * Tracking number for the return shipment
   */
  returnTrackingNumber?: string | null;
  /**
   * Images of returned items or return receipts
   */
  returnReceiptImages?:
    | {
        image: number | Media;
        description?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: number;
  /**
   * You will need to rebuild the website when changing this field.
   */
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: number | Post;
        } | null)
      | ({
          relationTo: 'products';
          value: number | Product;
        } | null);
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: number;
  form: number | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This is a collection of automatically created search results. These results are used by the global site search and will be updated automatically as documents in the CMS are created or updated.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search".
 */
export interface Search {
  id: number;
  title?: string | null;
  priority?: number | null;
  doc:
    | {
        relationTo: 'posts';
        value: number | Post;
      }
    | {
        relationTo: 'products';
        value: number | Product;
      };
  slug?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (number | null) | Media;
  };
  categories?:
    | {
        relationTo?: string | null;
        id?: string | null;
        title?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: number;
  /**
   * Input data provided to the job
   */
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  taskStatus?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  completedAt?: string | null;
  totalTried?: number | null;
  /**
   * If hasError is true this job will not be retried
   */
  hasError?: boolean | null;
  /**
   * If hasError is true, this is the error that caused it
   */
  error?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Task execution log
   */
  log?:
    | {
        executedAt: string;
        completedAt: string;
        taskSlug: 'inline' | 'schedulePublish';
        taskID: string;
        input?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        output?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        state: 'failed' | 'succeeded';
        error?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  taskSlug?: ('inline' | 'schedulePublish') | null;
  queue?: string | null;
  waitUntil?: string | null;
  processing?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'posts';
        value: number | Post;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'categories';
        value: number | Category;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'brands';
        value: number | Brand;
      } | null)
    | ({
        relationTo: 'sizes';
        value: number | Size;
      } | null)
    | ({
        relationTo: 'colors';
        value: number | Color;
      } | null)
    | ({
        relationTo: 'tags';
        value: number | Tag;
      } | null)
    | ({
        relationTo: 'orders';
        value: number | Order;
      } | null)
    | ({
        relationTo: 'products';
        value: number | Product;
      } | null)
    | ({
        relationTo: 'reviews';
        value: number | Review;
      } | null)
    | ({
        relationTo: 'addresses';
        value: number | Address;
      } | null)
    | ({
        relationTo: 'coupons';
        value: number | Coupon;
      } | null)
    | ({
        relationTo: 'flash-sales';
        value: number | FlashSale;
      } | null)
    | ({
        relationTo: 'payment-methods';
        value: number | PaymentMethod;
      } | null)
    | ({
        relationTo: 'social-media';
        value: number | SocialMedia;
      } | null)
    | ({
        relationTo: 'wishlists';
        value: number | Wishlist;
      } | null)
    | ({
        relationTo: 'loyalty-points';
        value: number | LoyaltyPoint;
      } | null)
    | ({
        relationTo: 'rewards';
        value: number | Reward;
      } | null)
    | ({
        relationTo: 'referrals';
        value: number | Referral;
      } | null)
    | ({
        relationTo: 'referral-attempts';
        value: number | ReferralAttempt;
      } | null)
    | ({
        relationTo: 'referral-analytics';
        value: number | ReferralAnalytic;
      } | null)
    | ({
        relationTo: 'referral-rewards';
        value: number | ReferralReward;
      } | null)
    | ({
        relationTo: 'invoice-templates';
        value: number | InvoiceTemplate;
      } | null)
    | ({
        relationTo: 'returns';
        value: number | Return;
      } | null)
    | ({
        relationTo: 'redirects';
        value: number | Redirect;
      } | null)
    | ({
        relationTo: 'forms';
        value: number | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: number | FormSubmission;
      } | null)
    | ({
        relationTo: 'search';
        value: number | Search;
      } | null)
    | ({
        relationTo: 'payload-jobs';
        value: number | PayloadJob;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  hero?:
    | T
    | {
        type?: T;
        richText?: T;
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    appearance?: T;
                  };
              id?: T;
            };
        media?: T;
      };
  layout?:
    | T
    | {
        cta?: T | CallToActionBlockSelect<T>;
        content?: T | ContentBlockSelect<T>;
        mediaBlock?: T | MediaBlockSelect<T>;
        archive?: T | ArchiveBlockSelect<T>;
        formBlock?: T | FormBlockSelect<T>;
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock_select".
 */
export interface CallToActionBlockSelect<T extends boolean = true> {
  richText?: T;
  links?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock_select".
 */
export interface ContentBlockSelect<T extends boolean = true> {
  columns?:
    | T
    | {
        size?: T;
        richText?: T;
        enableLink?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock_select".
 */
export interface MediaBlockSelect<T extends boolean = true> {
  media?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock_select".
 */
export interface ArchiveBlockSelect<T extends boolean = true> {
  introContent?: T;
  populateBy?: T;
  relationTo?: T;
  categories?: T;
  limit?: T;
  selectedDocs?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock_select".
 */
export interface FormBlockSelect<T extends boolean = true> {
  form?: T;
  enableIntro?: T;
  introContent?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  heroImage?: T;
  content?: T;
  relatedPosts?: T;
  categories?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  authors?: T;
  populatedAuthors?:
    | T
    | {
        id?: T;
        name?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        square?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        small?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        xlarge?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        og?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  title?: T;
  media?: T;
  slug?: T;
  slugLock?: T;
  parent?: T;
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  addresses?: T;
  name?: T;
  loyalty_points?: T;
  referralCode?: T;
  referredBy?: T;
  totalReferrals?: T;
  referralRewards?: T;
  roles?: T;
  stripeCustomerID?: T;
  skipSync?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "brands_select".
 */
export interface BrandsSelect<T extends boolean = true> {
  title?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sizes_select".
 */
export interface SizesSelect<T extends boolean = true> {
  title?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "colors_select".
 */
export interface ColorsSelect<T extends boolean = true> {
  title?: T;
  code?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tags_select".
 */
export interface TagsSelect<T extends boolean = true> {
  title?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders_select".
 */
export interface OrdersSelect<T extends boolean = true> {
  user?: T;
  coupon?: T;
  items?:
    | T
    | {
        product?: T;
        clientId?: T;
        name?: T;
        slug?: T;
        image?: T;
        category?: T;
        price?: T;
        countInStock?: T;
        quantity?: T;
        size?: T;
        color?: T;
        id?: T;
      };
  address?: T;
  shippingAddress?:
    | T
    | {
        fullName?: T;
        street?: T;
        city?: T;
        postalCode?: T;
        country?: T;
        province?: T;
        phone?: T;
      };
  expectedDeliveryDate?: T;
  expectedDeliveryDate_tz?: T;
  paymentMethod?: T;
  paymentResult?:
    | T
    | {
        id?: T;
        status?: T;
        email_address?: T;
        pricePaid?: T;
      };
  itemsPrice?: T;
  shippingPrice?: T;
  taxPrice?: T;
  totalPrice?: T;
  isPaid?: T;
  paidAt?: T;
  paidAt_tz?: T;
  isDelivered?: T;
  deliveredAt?: T;
  deliveredAt_tz?: T;
  createdAt?: T;
  createdAt_tz?: T;
  invoiceDelivery?:
    | T
    | {
        preferences?:
          | T
          | {
              sendEmail?: T;
              sendWhatsApp?: T;
              sendSMS?: T;
            };
        status?:
          | T
          | {
              emailSent?: T;
              whatsappSent?: T;
              smsSent?: T;
              lastSentAt?: T;
            };
      };
  updatedAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products_select".
 */
export interface ProductsSelect<T extends boolean = true> {
  title?: T;
  barcode?: T;
  price?: T;
  listPrice?: T;
  flashSaleId?: T;
  flashSaleEndDate?: T;
  flashSaleDiscount?: T;
  isFeatured?: T;
  isPublished?: T;
  countInStock?: T;
  numSales?: T;
  avgRating?: T;
  numReviews?: T;
  ratingDistribution?:
    | T
    | {
        rating?: T;
        count?: T;
        id?: T;
      };
  images?:
    | T
    | {
        image?: T;
        id?: T;
      };
  content?: T;
  relatedProducts?: T;
  tags?: T;
  categories?: T;
  brands?: T;
  colors?: T;
  sizes?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  publishedAt_tz?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reviews_select".
 */
export interface ReviewsSelect<T extends boolean = true> {
  user?: T;
  isVerifiedPurchase?: T;
  product?: T;
  rating?: T;
  title?: T;
  comment?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "addresses_select".
 */
export interface AddressesSelect<T extends boolean = true> {
  user?: T;
  fullName?: T;
  street?: T;
  city?: T;
  postalCode?: T;
  country?: T;
  province?: T;
  phone?: T;
  isDefault?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "coupons_select".
 */
export interface CouponsSelect<T extends boolean = true> {
  code?: T;
  discountPercent?: T;
  startDate?: T;
  startDate_tz?: T;
  endDate?: T;
  endDate_tz?: T;
  usageLimit?: T;
  usageCount?: T;
  orders?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "flash-sales_select".
 */
export interface FlashSalesSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  status?: T;
  startDate?: T;
  endDate?: T;
  discountType?: T;
  discountAmount?: T;
  products?: T;
  rules?:
    | T
    | {
        type?: T;
        value?: T;
        id?: T;
      };
  stats?:
    | T
    | {
        totalOrders?: T;
        totalRevenue?: T;
        totalDiscount?: T;
        averageOrderValue?: T;
      };
  totalQuantity?: T;
  soldQuantity?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payment-methods_select".
 */
export interface PaymentMethodsSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  icon?: T;
  isActive?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "social-media_select".
 */
export interface SocialMediaSelect<T extends boolean = true> {
  platform?: T;
  isEnabled?: T;
  appId?: T;
  appSecret?: T;
  apiKey?: T;
  apiSecret?: T;
  accessToken?: T;
  pinterestAccessToken?: T;
  clientId?: T;
  clientSecret?: T;
  sharingPreferences?:
    | T
    | {
        shareProducts?: T;
        shareBlogPosts?: T;
        shareFlashSales?: T;
      };
  defaultShareMessage?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "wishlists_select".
 */
export interface WishlistsSelect<T extends boolean = true> {
  user?: T;
  items?:
    | T
    | {
        product?: T;
        addedAt?: T;
        id?: T;
      };
  createdAt?: T;
  updatedAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "loyalty-points_select".
 */
export interface LoyaltyPointsSelect<T extends boolean = true> {
  customerId?: T;
  points?: T;
  tier?: T;
  pointsHistory?:
    | T
    | {
        points?: T;
        type?: T;
        description?: T;
        createdAt?: T;
        id?: T;
      };
  rewards?:
    | T
    | {
        rewardId?: T;
        name?: T;
        pointsCost?: T;
        status?: T;
        redeemedAt?: T;
        id?: T;
      };
  tierHistory?:
    | T
    | {
        tier?: T;
        changedAt?: T;
        reason?: T;
        id?: T;
      };
  createdAt?: T;
  updatedAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "rewards_select".
 */
export interface RewardsSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  pointsCost?: T;
  type?: T;
  discountAmount?: T;
  discountType?: T;
  freeProduct?: T;
  specialAccessDetails?: T;
  validFrom?: T;
  validUntil?: T;
  isActive?: T;
  linkedProduct?: T;
  stock?: T;
  tierRestrictions?: T;
  image?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "referrals_select".
 */
export interface ReferralsSelect<T extends boolean = true> {
  referrer?: T;
  referredUser?: T;
  referralCode?: T;
  status?: T;
  rewardTier?: T;
  purchaseAmount?: T;
  expiryDate?: T;
  completedAt?: T;
  notes?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "referral-attempts_select".
 */
export interface ReferralAttemptsSelect<T extends boolean = true> {
  referralCode?: T;
  attemptedBy?: T;
  status?: T;
  failureReason?: T;
  failureDetails?: T;
  ipAddress?: T;
  userAgent?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "referral-analytics_select".
 */
export interface ReferralAnalyticsSelect<T extends boolean = true> {
  referralCode?: T;
  referrer?: T;
  totalAttempts?: T;
  successfulAttempts?: T;
  failedAttempts?: T;
  successRate?: T;
  totalPointsAwarded?: T;
  averagePurchaseAmount?: T;
  totalPurchaseAmount?: T;
  failureBreakdown?:
    | T
    | {
        alreadyReferred?: T;
        invalidCode?: T;
        expiredCode?: T;
        other?: T;
      };
  geographicData?:
    | T
    | {
        countries?: T;
        cities?: T;
      };
  deviceData?:
    | T
    | {
        browsers?: T;
        operatingSystems?: T;
        devices?: T;
      };
  timeData?:
    | T
    | {
        hourlyDistribution?: T;
        dailyDistribution?: T;
      };
  lastUpdated?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "referral-rewards_select".
 */
export interface ReferralRewardsSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  rewardAmount?: T;
  rewardType?: T;
  rewardPercentage?: T;
  isActive?: T;
  startDate?: T;
  endDate?: T;
  minimumPurchaseAmount?: T;
  notes?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "invoice-templates_select".
 */
export interface InvoiceTemplatesSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  template?: T;
  isDefault?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "returns_select".
 */
export interface ReturnsSelect<T extends boolean = true> {
  returnId?: T;
  order?: T;
  user?: T;
  status?: T;
  requestDate?: T;
  items?:
    | T
    | {
        product?: T;
        quantity?: T;
        reason?: T;
        reasonDetails?: T;
        condition?: T;
        id?: T;
      };
  returnMethod?: T;
  refundType?: T;
  refundAmount?: T;
  isRefundProcessed?: T;
  refundProcessedDate?: T;
  adminNotes?: T;
  customerMessages?:
    | T
    | {
        message?: T;
        sentBy?: T;
        sentAt?: T;
        id?: T;
      };
  returnShippingLabel?: T;
  returnShippingCarrier?: T;
  returnTrackingNumber?: T;
  returnReceiptImages?:
    | T
    | {
        image?: T;
        description?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              defaultValue?: T;
              id?: T;
              blockName?: T;
            };
        country?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              placeholder?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        state?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search_select".
 */
export interface SearchSelect<T extends boolean = true> {
  title?: T;
  priority?: T;
  doc?: T;
  slug?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  categories?:
    | T
    | {
        relationTo?: T;
        id?: T;
        title?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs_select".
 */
export interface PayloadJobsSelect<T extends boolean = true> {
  input?: T;
  taskStatus?: T;
  completedAt?: T;
  totalTried?: T;
  hasError?: T;
  error?: T;
  log?:
    | T
    | {
        executedAt?: T;
        completedAt?: T;
        taskSlug?: T;
        taskID?: T;
        input?: T;
        output?: T;
        state?: T;
        error?: T;
        id?: T;
      };
  taskSlug?: T;
  queue?: T;
  waitUntil?: T;
  processing?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: number;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: number;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskSchedulePublish".
 */
export interface TaskSchedulePublish {
  input: {
    type?: ('publish' | 'unpublish') | null;
    locale?: string | null;
    doc?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: number | Post;
        } | null);
    global?: string | null;
    user?: (number | null) | User;
  };
  output?: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerBlock".
 */
export interface BannerBlock {
  style: 'info' | 'warning' | 'error' | 'success';
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'banner';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CodeBlock".
 */
export interface CodeBlock {
  language?: ('typescript' | 'javascript' | 'css') | null;
  code: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'code';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}